package itp;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.runtime.Debug.id;
//import sun.nio.fs.WindowsUserPrincipals.User;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SHARUKH
 */
public class LeavesN extends javax.swing.JFrame {
    /**
     * Creates new form LeavesN
     */  
     Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
 
    
    public LeavesN() {
        super("LeavesN");
        initComponents();
        show_teacher();
        //conn = databaseConnection.connection();
    }
    
    /**
     *
     * @return
     * @throws SQLException
     */
    public ArrayList<Teacher> teacherList() {
              ArrayList<Teacher> teacherList = new ArrayList<>();
        
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=tinytot;user=admin;password=123456");
            
            String query1 = "SELECT * FROM LeavesN";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Teacher teacher;
            
            while(rs.next()){
                teacher = new Teacher(rs.getString("Name"),rs.getString("Id"), rs.getInt("Days") , rs.getInt("TimeIn") , rs.getInt("Timeout") , rs.getInt("Fullday") , rs.getInt("Halfday") , rs.getInt("ShortLeaves") , rs.getInt("AnnualLeaves") , rs.getInt("CasualLeaves") , rs.getInt("DutyLeaves"));
                teacherList.add(teacher);
                    }                         
                 }
                 catch(Exception e){
                       JOptionPane.showMessageDialog(null,e);
                    }
        return teacherList;
    }
     
    public void show_teacher(){
        ArrayList<Teacher> list = teacherList() ;
        DefaultTableModel model = (DefaultTableModel)Lt1.getModel();
       
        Object[] row = new Object[11];
            for(int i=0 ; i<list.size() ; i++){
                row[0]=list.get(i).getName();
                row[1]=list.get(i).getId();
                row[2]=list.get(i).getDays();
                row[3]=list.get(i).getTimein();
                row[4]=list.get(i).getTimeOut();
                row[5]=list.get(i).getFullDay();
                row[6]=list.get(i).getHalfDay();
                row[7]=list.get(i).getShortLeaves();
                row[8]=list.get(i).getAnnualLeaves();
                row[9]=list.get(i).getCasualLeaves();
                row[10]=list.get(i).getDutyLeaves();
                model.addRow(row);                                                                               
                }
            }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        dutyLeaves = new javax.swing.JTextField();
        CasualLeaves = new javax.swing.JTextField();
        AnnualLeaves = new javax.swing.JTextField();
        ShortLeaves = new javax.swing.JTextField();
        Halfday = new javax.swing.JTextField();
        Fullday = new javax.swing.JTextField();
        TimeOut = new javax.swing.JTextField();
        TimeIn = new javax.swing.JTextField();
        Days = new javax.swing.JTextField();
        LNAME9 = new javax.swing.JLabel();
        LNAME8 = new javax.swing.JLabel();
        LNAME7 = new javax.swing.JLabel();
        LNAME6 = new javax.swing.JLabel();
        LNAME5 = new javax.swing.JLabel();
        LNAME4 = new javax.swing.JLabel();
        LNAME3 = new javax.swing.JLabel();
        LNAME2 = new javax.swing.JLabel();
        LNAME1 = new javax.swing.JLabel();
        LDELETE = new javax.swing.JButton();
        LUPDATE = new javax.swing.JButton();
        LINSERT = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lt1 = new javax.swing.JTable();
        Id = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        LID = new javax.swing.JLabel();
        LNAME = new javax.swing.JLabel();
        LTOPIC = new javax.swing.JLabel();
        LPANEL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jButton2.setBackground(new java.awt.Color(153, 153, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home-30.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(280, 670, 60, 40);

        dutyLeaves.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dutyLeavesKeyTyped(evt);
            }
        });
        jPanel1.add(dutyLeaves);
        dutyLeaves.setBounds(910, 250, 160, 20);

        CasualLeaves.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CasualLeavesKeyTyped(evt);
            }
        });
        jPanel1.add(CasualLeaves);
        CasualLeaves.setBounds(910, 220, 160, 20);

        AnnualLeaves.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AnnualLeavesKeyTyped(evt);
            }
        });
        jPanel1.add(AnnualLeaves);
        AnnualLeaves.setBounds(910, 190, 160, 20);

        ShortLeaves.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ShortLeavesKeyTyped(evt);
            }
        });
        jPanel1.add(ShortLeaves);
        ShortLeaves.setBounds(910, 160, 160, 20);

        Halfday.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HalfdayKeyTyped(evt);
            }
        });
        jPanel1.add(Halfday);
        Halfday.setBounds(140, 280, 160, 20);

        Fullday.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FulldayKeyTyped(evt);
            }
        });
        jPanel1.add(Fullday);
        Fullday.setBounds(140, 250, 160, 20);

        TimeOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TimeOutKeyTyped(evt);
            }
        });
        jPanel1.add(TimeOut);
        TimeOut.setBounds(140, 220, 160, 20);

        TimeIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TimeInKeyTyped(evt);
            }
        });
        jPanel1.add(TimeIn);
        TimeIn.setBounds(140, 190, 160, 20);

        Days.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DaysKeyTyped(evt);
            }
        });
        jPanel1.add(Days);
        Days.setBounds(140, 160, 160, 20);

        LNAME9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME9.setForeground(new java.awt.Color(255, 255, 255));
        LNAME9.setText("ShortLeaves");
        jPanel1.add(LNAME9);
        LNAME9.setBounds(740, 160, 130, 22);

        LNAME8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME8.setForeground(new java.awt.Color(255, 255, 255));
        LNAME8.setText("AnnualLeaves");
        jPanel1.add(LNAME8);
        LNAME8.setBounds(740, 190, 130, 22);

        LNAME7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME7.setForeground(new java.awt.Color(255, 255, 255));
        LNAME7.setText("CasualLeaves");
        jPanel1.add(LNAME7);
        LNAME7.setBounds(740, 220, 130, 20);

        LNAME6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME6.setForeground(new java.awt.Color(255, 255, 255));
        LNAME6.setText("DutyLeaves");
        jPanel1.add(LNAME6);
        LNAME6.setBounds(740, 250, 130, 22);

        LNAME5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME5.setForeground(new java.awt.Color(255, 255, 255));
        LNAME5.setText("TimeOut");
        jPanel1.add(LNAME5);
        LNAME5.setBounds(10, 220, 130, 22);

        LNAME4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME4.setForeground(new java.awt.Color(255, 255, 255));
        LNAME4.setText("Fullday");
        jPanel1.add(LNAME4);
        LNAME4.setBounds(10, 250, 130, 20);

        LNAME3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME3.setForeground(new java.awt.Color(255, 255, 255));
        LNAME3.setText("Halfday");
        jPanel1.add(LNAME3);
        LNAME3.setBounds(10, 280, 130, 22);

        LNAME2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME2.setForeground(new java.awt.Color(255, 255, 255));
        LNAME2.setText("TimeIn");
        jPanel1.add(LNAME2);
        LNAME2.setBounds(10, 190, 130, 22);

        LNAME1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME1.setForeground(new java.awt.Color(255, 255, 255));
        LNAME1.setText("DaysOfMonth");
        jPanel1.add(LNAME1);
        LNAME1.setBounds(10, 160, 130, 22);

        LDELETE.setBackground(new java.awt.Color(153, 153, 255));
        LDELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete-30.png"))); // NOI18N
        LDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LDELETEActionPerformed(evt);
            }
        });
        jPanel1.add(LDELETE);
        LDELETE.setBounds(190, 670, 60, 40);

        LUPDATE.setBackground(new java.awt.Color(153, 153, 255));
        LUPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update-30.png"))); // NOI18N
        LUPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LUPDATEActionPerformed(evt);
            }
        });
        jPanel1.add(LUPDATE);
        LUPDATE.setBounds(100, 670, 60, 40);

        LINSERT.setBackground(new java.awt.Color(153, 153, 255));
        LINSERT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/insert-30.png"))); // NOI18N
        LINSERT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LINSERTActionPerformed(evt);
            }
        });
        jPanel1.add(LINSERT);
        LINSERT.setBounds(10, 670, 63, 40);

        jButton1.setBackground(new java.awt.Color(153, 153, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/color-home-30.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1010, 670, 60, 40);

        Lt1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Days of Month", "Time in", "Time out", "Full day leave", "Half day leave", "Short leaves", "Annual leaves", "Casual leaves", "Duty leaves"
            }
        ));
        jScrollPane1.setViewportView(Lt1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 320, 1060, 340);

        Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdActionPerformed(evt);
            }
        });
        jPanel1.add(Id);
        Id.setBounds(910, 130, 160, 22);
        jPanel1.add(Name);
        Name.setBounds(140, 130, 160, 20);

        LID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LID.setForeground(new java.awt.Color(255, 255, 255));
        LID.setText("Id");
        jPanel1.add(LID);
        LID.setBounds(740, 130, 110, 30);

        LNAME.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LNAME.setForeground(new java.awt.Color(255, 255, 255));
        LNAME.setText("Name");
        jPanel1.add(LNAME);
        LNAME.setBounds(10, 130, 130, 22);

        LTOPIC.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        LTOPIC.setForeground(new java.awt.Color(255, 255, 255));
        LTOPIC.setText("Leaves for the month of September 2019");
        jPanel1.add(LTOPIC);
        LTOPIC.setBounds(30, 10, 1040, 58);

        LPANEL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background.jpg"))); // NOI18N
        jPanel1.add(LPANEL);
        LPANEL.setBounds(0, 0, 1080, 720);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdActionPerformed

    private void LUPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LUPDATEActionPerformed
        // TODO add your handling code here:
       String name1 = Name.getText();
       String id1 = Id.getText();
       String days1= Days.getText();
       String timein1 = TimeIn.getText();
       String timeOut1 = TimeOut.getText();
       String fullday1 = Fullday.getText();
       String halfday1 = Halfday.getText();
       String shortleave1 = ShortLeaves.getText();
       String annualLeaves1 = AnnualLeaves.getText();
       String casualLeaves1 = CasualLeaves.getText();
       String DutyLeaves1 = dutyLeaves.getText();
    
   
       if(name1.equals("")){
           JOptionPane.showMessageDialog(null,"Name field is empty");
       }
       else if(id1.equals("")){
           JOptionPane.showMessageDialog(null,"ID field is empty");
       }       
       else if(days1.equals("")){
           JOptionPane.showMessageDialog(null,"Days Of Month field is empty");
       }
       else if(timein1.equals("")){
           JOptionPane.showMessageDialog(null,"Time In field is empty");
       }
       else if(timeOut1.equals("")){
           JOptionPane.showMessageDialog(null,"Time Out field is empty");
       }
         else if(fullday1.equals("")){
           JOptionPane.showMessageDialog(null,"Full day field is empty");
       }
       else if(halfday1.equals("")){
           JOptionPane.showMessageDialog(null,"Half day field is empty");
       }
       else if(shortleave1.equals("")){
           JOptionPane.showMessageDialog(null,"Short Leaves field is empty");
       }
       else if(annualLeaves1.equals("")){
           JOptionPane.showMessageDialog(null,"Annual Leave field is empty");
       }
       else if(casualLeaves1.equals("")){
           JOptionPane.showMessageDialog(null,"Casual Leaves field is empty");
       }
       else if(DutyLeaves1.equals("")){
           JOptionPane.showMessageDialog(null,"Duty Leaves field is empty");
       }

       else{
        
        
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=tinytot;user=admin;password=123456");
            int row = Lt1.getSelectedRow();
            String value = (Lt1.getModel().getValueAt(row, 0).toString());
            String query = "UPDATE LeavesN set Name=? , Id=? ,Days=? , TimeIn=? , TimeOut=?  , FullDay=? , HalfDay=? , ShortLeaves=? , AnnualLeaves=? , CasualLeaves=? , DutyLeaves=? "+value;
            PreparedStatement pst = conn.prepareStatement(query);
          
                    pst.setString(1,Name.getText());
                    pst.setString(2 ,Id.getText());
                    pst.setString(3,Days.getText());
                    pst.setString(4 ,TimeIn.getText());
                    pst.setString(5 ,TimeOut.getText());
                    pst.setString(6 ,Fullday.getText());
                    pst.setString(7 ,Halfday.getText());
                    pst.setString(8 ,ShortLeaves.getText());
                    pst.setString(9 ,AnnualLeaves.getText());
                    pst.setString(10,CasualLeaves.getText());
                    pst.setString(11 ,dutyLeaves.getText());
                      
                  pst.executeUpdate();
                  DefaultTableModel model = (DefaultTableModel)Lt1.getModel();
                  model.setRowCount(0);
                  show_teacher();
                  JOptionPane.showMessageDialog(null,"Inserted Successfully!");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
          }
       }
    }//GEN-LAST:event_LUPDATEActionPerformed

    
    
    
    
    private void LDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LDELETEActionPerformed
        // TODO add your handling code here:
         int x = JOptionPane.showConfirmDialog(null, "DO you really want to delete?");
        
        if(x==0){
               String id1 = Id.getText();
               
                if(id1.equals("")){
                        JOptionPane.showConfirmDialog(null, "ID is required");
                }
                else{
                    String sql = "DELETE from LeavesN where name1 = '" + id1 +"'";
               
        
        
        try{
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=tinytot;user=admin;password=123456");
     
            int row = Lt1.getSelectedRow();
            String value = (Lt1.getModel().getValueAt(row,0).toString());
            String query = "DELETE FROM LeavesN where salary"+value;
            PreparedStatement pst = conn.prepareStatement(query);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)Lt1.getModel();
            model.setRowCount(0);
            show_teacher();
            JOptionPane.showMessageDialog(null,"Delete Successfully!");
        
          }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_LDELETEActionPerformed

    
    
    private void LINSERTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LINSERTActionPerformed
        // TODO add your handling code here:
       String name1 = Name.getText();
       String id1 = Id.getText();
       String days1= Days.getText();
       String timein1 = TimeIn.getText();
       String timeOut1 = TimeOut.getText();
       String fullday1 = Fullday.getText();
       String halfday1 = Halfday.getText();
       String shortleave1 = ShortLeaves.getText();
       String annualLeaves1 = AnnualLeaves.getText();
       String casualLeaves1 = CasualLeaves.getText();
       String DutyLeaves1 = dutyLeaves.getText();
    
   
       
       if(name1.equals("")){
           JOptionPane.showMessageDialog(null,"Name field is empty");
       }
       else if(id1.equals("")){
           JOptionPane.showMessageDialog(null,"ID field is empty");
       }       
       else if(days1.equals("")){
           JOptionPane.showMessageDialog(null,"Days Of Month field is empty");
       }
       else if(timein1.equals("")){
           JOptionPane.showMessageDialog(null,"Time In field is empty");
       }
       else if(timeOut1.equals("")){
           JOptionPane.showMessageDialog(null,"Time Out field is empty");
       }
         else if(fullday1.equals("")){
           JOptionPane.showMessageDialog(null,"Full day field is empty");
       }
       else if(halfday1.equals("")){
           JOptionPane.showMessageDialog(null,"Half day field is empty");
       }
       else if(shortleave1.equals("")){
           JOptionPane.showMessageDialog(null,"Short Leaves field is empty");
       }
       else if(annualLeaves1.equals("")){
           JOptionPane.showMessageDialog(null,"Annual Leave field is empty");
       }
       else if(casualLeaves1.equals("")){
           JOptionPane.showMessageDialog(null,"Casual Leaves field is empty");
       }
       else if(DutyLeaves1.equals("")){
           JOptionPane.showMessageDialog(null,"Duty Leaves field is empty");
       }

       else{
        
        
        
          try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=tinytot;user=admin;password=123456");
            String query ="insert into LeavesN(Name,Id,Days,TimeIn ,TimeOut,Fullday,Halfday,ShortLeaves,AnnualLeaves,CasualLeaves,DutyLeaves)values(?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement pst = conn.prepareStatement(query);
            
                    pst.setString(1 ,Name.getText());
                    pst.setString(2 ,Id.getText());
                    pst.setString(3 ,Days.getText());
                    pst.setString(4 ,TimeIn.getText());
                    pst.setString(5 ,TimeOut.getText());
                    pst.setString(6 ,Fullday.getText());
                    pst.setString(7 ,Halfday.getText());
                    pst.setString(8 ,ShortLeaves.getText());
                    pst.setString(9 ,AnnualLeaves.getText());
                    pst.setString(10,CasualLeaves.getText());
                    pst.setString(11,dutyLeaves.getText());
                      
                  pst.executeUpdate();
                  DefaultTableModel model = (DefaultTableModel)Lt1.getModel();
                  model.setRowCount(0);
                  show_teacher();
                  JOptionPane.showMessageDialog(null,"Inserted Successfully!");
       
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
          }
       }
    }//GEN-LAST:event_LINSERTActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        HomeN home = new HomeN();
//        home.setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void DaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DaysKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_DaysKeyTyped

    private void TimeInKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TimeInKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_TimeInKeyTyped

    private void TimeOutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TimeOutKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_TimeOutKeyTyped

    private void FulldayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FulldayKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_FulldayKeyTyped

    private void HalfdayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HalfdayKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_HalfdayKeyTyped

    private void ShortLeavesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ShortLeavesKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ShortLeavesKeyTyped

    private void AnnualLeavesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AnnualLeavesKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_AnnualLeavesKeyTyped

    private void CasualLeavesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CasualLeavesKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_CasualLeavesKeyTyped

    private void dutyLeavesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dutyLeavesKeyTyped
char c = evt.getKeyChar();
        if(Character.isLetter(c) && !evt.isAltDown() )
        {
            evt.consume();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_dutyLeavesKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LeavesN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LeavesN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LeavesN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LeavesN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeavesN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AnnualLeaves;
    private javax.swing.JTextField CasualLeaves;
    private javax.swing.JTextField Days;
    private javax.swing.JTextField Fullday;
    private javax.swing.JTextField Halfday;
    private javax.swing.JTextField Id;
    private javax.swing.JButton LDELETE;
    private javax.swing.JLabel LID;
    private javax.swing.JButton LINSERT;
    private javax.swing.JLabel LNAME;
    private javax.swing.JLabel LNAME1;
    private javax.swing.JLabel LNAME2;
    private javax.swing.JLabel LNAME3;
    private javax.swing.JLabel LNAME4;
    private javax.swing.JLabel LNAME5;
    private javax.swing.JLabel LNAME6;
    private javax.swing.JLabel LNAME7;
    private javax.swing.JLabel LNAME8;
    private javax.swing.JLabel LNAME9;
    private javax.swing.JLabel LPANEL;
    private javax.swing.JLabel LTOPIC;
    private javax.swing.JButton LUPDATE;
    private javax.swing.JTable Lt1;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField ShortLeaves;
    private javax.swing.JTextField TimeIn;
    private javax.swing.JTextField TimeOut;
    private javax.swing.JTextField dutyLeaves;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
